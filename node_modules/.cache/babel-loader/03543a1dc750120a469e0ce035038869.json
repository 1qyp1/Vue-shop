{"ast":null,"code":"import { Indicator } from 'mint-ui';\nimport axios from 'axios';\nimport store from '@/store/index.js';\nimport router from \"@/router/index.js\";\nexport default {\n  common: {\n    method: 'GET',\n    data: {},\n    params: {},\n    headers: {}\n  },\n\n  $axios(options = {}) {\n    // 意思是传入什么就是什么，如果不传就是默认的\n    options.method = options.method || this.common.method;\n    options.data = options.data || this.common.data;\n    options.params = options.params || this.common.params;\n    options.headers = options.headers || this.common.headers; //请求前==》显示加载中...\n\n    Indicator.open('加载中...'); // 是否是登录状态\n    // 有些需要认证，有些则不需要验证，如果token为true 那么说明需要验证\n\n    if (options.headers.token) {\n      options.headers.token = store.state.user.token; // 如果没有token表示没登录，即跳转至登录页面\n\n      if (!options.headers.token) {\n        router.push('/login');\n      }\n    }\n\n    return axios(options).then(v => {\n      let data = v.data.data;\n      return new Promise((res, rej) => {\n        if (!v) return rej(); //结束===》关闭加载中\n\n        setTimeout(() => {\n          Indicator.close();\n        }, 500);\n        res(data);\n      });\n    });\n  }\n\n};","map":{"version":3,"names":["Indicator","axios","store","router","common","method","data","params","headers","$axios","options","open","token","state","user","push","then","v","Promise","res","rej","setTimeout","close"],"sources":["E:/BaiduNetdiskDownload/vue-tea/vue-tea/src/common/api/request.js"],"sourcesContent":["import { Indicator } from 'mint-ui';\r\nimport axios from 'axios'\r\nimport  store from '@/store/index.js'\r\nimport router from \"@/router/index.js\"\r\nexport default{\r\n\tcommon:{\r\n\t\tmethod:'GET',\r\n\t\tdata:{},\r\n\t\tparams:{},\r\n\t\theaders:{}\r\n\t},\r\n\t$axios( options={} ){\r\n\t\t\r\n        // 意思是传入什么就是什么，如果不传就是默认的\r\n\t\toptions.method = options.method || this.common.method;\r\n\t\toptions.data = options.data || this.common.data;\r\n\t\toptions.params = options.params || this.common.params;\r\n\t\toptions.headers = options.headers || this.common.headers;\r\n\t\t\r\n\t\t//请求前==》显示加载中...\r\n\t\tIndicator.open('加载中...');\r\n\t\t\r\n\t\t// 是否是登录状态\r\n\t\t// 有些需要认证，有些则不需要验证，如果token为true 那么说明需要验证\r\n        if( options.headers.token ){\r\n            options.headers.token = store.state.user.token;\r\n\t\t\t// 如果没有token表示没登录，即跳转至登录页面\r\n            if( !options.headers.token ){\r\n               router.push('/login');\r\n           }\r\n        }\r\n\r\n\t\treturn axios(options).then(v=>{\r\n\t\t\tlet data = v.data.data;\r\n\t\t\treturn new Promise((res,rej)=>{\r\n\t\t\t\tif( !v ) return rej();\r\n\t\t\t\t//结束===》关闭加载中\r\n\t\t\t\tsetTimeout(()=>{\r\n\t\t\t\t\tIndicator.close();\r\n\t\t\t\t},500)\r\n\t\t\t\tres( data );\r\n\t\t\t})\r\n\t\t})\r\n\t\t\r\n\t}\r\n\t\r\n}"],"mappings":"AAAA,SAASA,SAAT,QAA0B,SAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAQC,KAAR,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,eAAc;EACbC,MAAM,EAAC;IACNC,MAAM,EAAC,KADD;IAENC,IAAI,EAAC,EAFC;IAGNC,MAAM,EAAC,EAHD;IAINC,OAAO,EAAC;EAJF,CADM;;EAObC,MAAM,CAAEC,OAAO,GAAC,EAAV,EAAc;IAEb;IACNA,OAAO,CAACL,MAAR,GAAiBK,OAAO,CAACL,MAAR,IAAkB,KAAKD,MAAL,CAAYC,MAA/C;IACAK,OAAO,CAACJ,IAAR,GAAeI,OAAO,CAACJ,IAAR,IAAgB,KAAKF,MAAL,CAAYE,IAA3C;IACAI,OAAO,CAACH,MAAR,GAAiBG,OAAO,CAACH,MAAR,IAAkB,KAAKH,MAAL,CAAYG,MAA/C;IACAG,OAAO,CAACF,OAAR,GAAkBE,OAAO,CAACF,OAAR,IAAmB,KAAKJ,MAAL,CAAYI,OAAjD,CANmB,CAQnB;;IACAR,SAAS,CAACW,IAAV,CAAe,QAAf,EATmB,CAWnB;IACA;;IACM,IAAID,OAAO,CAACF,OAAR,CAAgBI,KAApB,EAA2B;MACvBF,OAAO,CAACF,OAAR,CAAgBI,KAAhB,GAAwBV,KAAK,CAACW,KAAN,CAAYC,IAAZ,CAAiBF,KAAzC,CADuB,CAEhC;;MACS,IAAI,CAACF,OAAO,CAACF,OAAR,CAAgBI,KAArB,EAA4B;QACzBT,MAAM,CAACY,IAAP,CAAY,QAAZ;MACH;IACH;;IAEP,OAAOd,KAAK,CAACS,OAAD,CAAL,CAAeM,IAAf,CAAoBC,CAAC,IAAE;MAC7B,IAAIX,IAAI,GAAGW,CAAC,CAACX,IAAF,CAAOA,IAAlB;MACA,OAAO,IAAIY,OAAJ,CAAY,CAACC,GAAD,EAAKC,GAAL,KAAW;QAC7B,IAAI,CAACH,CAAL,EAAS,OAAOG,GAAG,EAAV,CADoB,CAE7B;;QACAC,UAAU,CAAC,MAAI;UACdrB,SAAS,CAACsB,KAAV;QACA,CAFS,EAER,GAFQ,CAAV;QAGAH,GAAG,CAAEb,IAAF,CAAH;MACA,CAPM,CAAP;IAQA,CAVM,CAAP;EAYA;;AAxCY,CAAd"},"metadata":{},"sourceType":"module"}