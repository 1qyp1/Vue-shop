{"ast":null,"code":"import Tabbar from \"@/components/common/Tabbar.vue\";\nimport Header from \"@/views/login/Header.vue\";\nimport { Toast } from \"mint-ui\";\nimport http from \"@/common/api/request.js\";\nexport default {\n  data() {\n    return {\n      disabled: false,\n      userTel: \"\",\n      //验证规则\n      rules: {\n        //手机号验证\n        userTel: {\n          rule: /^1[23456789]\\d{9}$/,\n          msg: \"手机号不能为空,并且是11位数字\"\n        },\n        //密码验证\n        userPwd: {\n          rule: /^\\w{6,12}$/,\n          msg: \"密码不能为空,并且要求6,12位\"\n        }\n      },\n      codeNum: 6,\n      codeMsg: \"获取短信验证码\",\n      code: \"\",\n      userCode: \"\",\n      userPwd: \"\"\n    };\n  },\n\n  components: {\n    Tabbar,\n    Header\n  },\n  methods: {\n    goUserLogin() {\n      this.$router.push(\"userLogin\");\n    },\n\n    //获取短信验证码\n    sendCode() {\n      //判断手机号\n      if (!this.validate(\"userTel\")) return; // 请求短信验证码接口\n\n      http.$axios({\n        url: \"api/code\",\n        method: \"POST\",\n        data: {\n          // 给后端传手机号\n          phone: this.userTel\n        }\n      }) //如果短信发送成功\n      .then(res => {\n        if (res.success) {\n          this.code = res.data;\n        }\n      }); // 禁用按钮\n\n      this.disabled = true; //倒计时\n\n      let timer = setInterval(() => {\n        --this.codeNum;\n        this.codeMsg = `重新发送 ${this.codeNum}`;\n      }, 1000); //判断什么时候停止定时器\n\n      setTimeout(() => {\n        // 停止倒计时\n        clearInterval(timer); // 使codeNum恢复到6秒\n\n        this.codeNum = 6; // 使按钮能够按下\n\n        this.disabled = false;\n        this.codeMsg = \"获取短信验证码\";\n      }, 6000);\n    },\n\n    //   验证信息并提示\n    validate(key) {\n      let bool = true; // key值的就是前端验证的userTel,this[key]是用户输入的账号密码，然后进行验证\n\n      if (!this.rules[key].rule.test(this[key])) {\n        Toast(this.rules[key].msg);\n        bool = false;\n        return false;\n      }\n\n      return bool;\n    },\n\n    // 点击注册\n    register() {\n      // if (this.code != this.userCode) {\n      //   Toast(\"验证码错误\");\n      // }\n      // 如果验证码(code)与用户输入的一致就进行注册\n      // if (this.code == this.userCode) {\n      //发送请求，让数据库添加手机号\n      http.$axios({\n        url: \"api/register\",\n        method: \"POST\",\n        // 拿到用户输入的手机号和密码\n        data: {\n          phone: this.userTel,\n          pwd: this.userPwd\n        }\n      }).then(res => {\n        Toast(res.msg);\n      }); // }\n    },\n\n    // 跳转注册页面\n    goRegister() {\n      this.$router.push(\"register\");\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2CA;AACA;AACA;AACA;AACA;EACAA;IACA;MACAC,eADA;MAEAC,WAFA;MAGA;MACAC;QACA;QACAD;UACAE,0BADA;UAEAC;QAFA,CAFA;QAMA;QACAC;UACAF,kBADA;UAEAC;QAFA;MAPA,CAJA;MAgBAE,UAhBA;MAiBAC,kBAjBA;MAkBAC,QAlBA;MAmBAC,YAnBA;MAoBAJ;IApBA;EAsBA,CAxBA;;EAyBAK;IACAC,MADA;IAEAC;EAFA,CAzBA;EA6BAC;IACAC;MACA;IACA,CAHA;;IAIA;IACAC;MACA;MACA,sCAFA,CAIA;;MACAC,KACAC,MADA,CACA;QACAC,eADA;QAEAC,cAFA;QAGApB;UACA;UACAqB;QAFA;MAHA,CADA,EASA;MATA,CAUAC,IAVA,CAUAC;QACA;UACA;QACA;MACA,CAdA,EALA,CAqBA;;MACA,qBAtBA,CAuBA;;MACA;QACA;QACA;MACA,CAHA,EAGA,IAHA,EAxBA,CA4BA;;MACAC;QACA;QACAC,qBAFA,CAGA;;QACA,iBAJA,CAKA;;QACA;QACA;MACA,CARA,EAQA,IARA;IASA,CA3CA;;IA4CA;IACAC;MACA,gBADA,CAEA;;MACA;QACAC;QACAC;QACA;MACA;;MACA;IACA,CAtDA;;IAuDA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACAZ,KACAC,MADA,CACA;QACAC,mBADA;QAEAC,cAFA;QAGA;QACApB;UACAqB,mBADA;UAEAS;QAFA;MAJA,CADA,EAUAR,IAVA,CAUAC;QACAI;MACA,CAZA,EAPA,CAoBA;IACA,CA7EA;;IA8EA;IACAI;MACA;IACA;;EAjFA;AA7BA","names":["data","disabled","userTel","rules","rule","msg","userPwd","codeNum","codeMsg","code","userCode","components","Tabbar","Header","methods","goUserLogin","sendCode","http","$axios","url","method","phone","then","res","setTimeout","clearInterval","validate","Toast","bool","register","pwd","goRegister"],"sourceRoot":"src/views/login","sources":["Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"login container\">\r\n    <Header>\r\n      <span>注册</span>\r\n    </Header>\r\n    <section>\r\n      <div class=\"login-tel\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"userTel\"\r\n          placeholder=\"请输入手机号\"\r\n          pattern=\"[0-9]*\"\r\n        />\r\n      </div>\r\n      <div class=\"login-code\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"请输入短信验证码\"\r\n          pattern=\"[0-9]*\"\r\n          v-model=\"userCode\"\r\n        />\r\n        <button @click=\"sendCode\" :disabled=\"disabled\">{{ codeMsg }}</button>\r\n      </div>\r\n      <div class=\"login-newPwd\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"userPwd\"\r\n          placeholder=\"请设置密码\"\r\n          pattern=\"[0-9]*\"\r\n        />\r\n      </div>\r\n      <div class=\"login-btn\" @click=\"register\">注册</div>\r\n\r\n      <div class=\"tab\">\r\n        <span @click=\"goUserLogin\">密码登录</span>\r\n        <span @click=\"goRegister\">快速注册</span>\r\n      </div>\r\n    </section>\r\n    <Tabbar></Tabbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Tabbar from \"@/components/common/Tabbar.vue\";\r\nimport Header from \"@/views/login/Header.vue\";\r\nimport { Toast } from \"mint-ui\";\r\nimport http from \"@/common/api/request.js\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      disabled: false,\r\n      userTel: \"\",\r\n      //验证规则\r\n      rules: {\r\n        //手机号验证\r\n        userTel: {\r\n          rule: /^1[23456789]\\d{9}$/,\r\n          msg: \"手机号不能为空,并且是11位数字\",\r\n        },\r\n        //密码验证\r\n        userPwd: {\r\n          rule: /^\\w{6,12}$/,\r\n          msg: \"密码不能为空,并且要求6,12位\",\r\n        },\r\n      },\r\n      codeNum: 6,\r\n      codeMsg: \"获取短信验证码\",\r\n      code: \"\",\r\n      userCode: \"\",\r\n      userPwd: \"\",\r\n    };\r\n  },\r\n  components: {\r\n    Tabbar,\r\n    Header,\r\n  },\r\n  methods: {\r\n    goUserLogin() {\r\n      this.$router.push(\"userLogin\");\r\n    },\r\n    //获取短信验证码\r\n    sendCode() {\r\n      //判断手机号\r\n      if (!this.validate(\"userTel\")) return;\r\n\r\n      // 请求短信验证码接口\r\n      http\r\n        .$axios({\r\n          url: \"api/code\",\r\n          method: \"POST\",\r\n          data: {\r\n            // 给后端传手机号\r\n            phone: this.userTel,\r\n          },\r\n        })\r\n        //如果短信发送成功\r\n        .then((res) => {\r\n          if (res.success) {\r\n            this.code = res.data;\r\n          }\r\n        });\r\n\r\n      // 禁用按钮\r\n      this.disabled = true;\r\n      //倒计时\r\n      let timer = setInterval(() => {\r\n        --this.codeNum;\r\n        this.codeMsg = `重新发送 ${this.codeNum}`;\r\n      }, 1000);\r\n      //判断什么时候停止定时器\r\n      setTimeout(() => {\r\n        // 停止倒计时\r\n        clearInterval(timer);\r\n        // 使codeNum恢复到6秒\r\n        this.codeNum = 6;\r\n        // 使按钮能够按下\r\n        this.disabled = false;\r\n        this.codeMsg = \"获取短信验证码\";\r\n      }, 6000);\r\n    },\r\n    //   验证信息并提示\r\n    validate(key) {\r\n      let bool = true;\r\n      // key值的就是前端验证的userTel,this[key]是用户输入的账号密码，然后进行验证\r\n      if (!this.rules[key].rule.test(this[key])) {\r\n        Toast(this.rules[key].msg);\r\n        bool = false;\r\n        return false;\r\n      }\r\n      return bool;\r\n    },\r\n    // 点击注册\r\n    register() {\r\n      // if (this.code != this.userCode) {\r\n      //   Toast(\"验证码错误\");\r\n      // }\r\n      // 如果验证码(code)与用户输入的一致就进行注册\r\n      // if (this.code == this.userCode) {\r\n        //发送请求，让数据库添加手机号\r\n        http\r\n          .$axios({\r\n            url: \"api/register\",\r\n            method: \"POST\",\r\n            // 拿到用户输入的手机号和密码\r\n            data: {\r\n              phone: this.userTel,\r\n              pwd: this.userPwd,\r\n            },\r\n          })\r\n          .then((res) => {\r\n            Toast(res.msg);\r\n          });\r\n      // }\r\n    },\r\n    // 跳转注册页面\r\n    goRegister() {\r\n      this.$router.push(\"register\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang='scss'>\r\n.login {\r\n}\r\nsection {\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #f5f5f5;\r\n  align-items: center;\r\n  div {\r\n    padding: 10px 0;\r\n    width: 335px;\r\n    height: 44px;\r\n  }\r\n  input {\r\n    box-sizing: border-box;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    height: 44px;\r\n    border: 1px solid #ccc;\r\n    padding: 0 10px;\r\n  }\r\n  .login-tel {\r\n    margin-top: 20px;\r\n    input {\r\n      width: 335px;\r\n    }\r\n  }\r\n  .login-code {\r\n    // input{\r\n    //     flex: 1;\r\n    // }\r\n    button {\r\n      border: 0;\r\n      height: 44px;\r\n      background-color: #b0352f;\r\n      border-radius: 10px;\r\n      // margin-left: 55px;\r\n      color: #fff;\r\n      padding: 0 9px;\r\n      width: 112px;\r\n      font-size: 13px;\r\n    }\r\n    input {\r\n      width: 223px;\r\n    }\r\n  }\r\n  .login-btn {\r\n    margin-top: 15px;\r\n    display: flex;\r\n    height: 20px;\r\n    background-color: #b0352f;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    \r\n  }\r\n  .tab {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    span {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  .login-newPwd {\r\n    input {\r\n      width: 335px;\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}