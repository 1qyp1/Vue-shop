{"ast":null,"code":"import Header from \"@/components/home/Header.vue\";\nimport Tabbar from \"../components/common/Tabbar.vue\";\nimport http from \"@/common/api/request.js\";\nimport BetterScroll from \"better-scroll\";\nexport default {\n  name: \"List\",\n\n  data() {\n    return {\n      leftData: [],\n      //左侧数据\n      rightData: [],\n      //右侧数据\n      rightBScroll: \"\",\n      //右侧滑动\n      allHeight: [],\n      //承载右侧高度值\n      scrollY: \"\",\n      //右侧滚动距离\n      isShow: true\n    };\n  },\n\n  components: {\n    Tabbar,\n    Header\n  },\n\n  async created() {\n    let res = await http.$axios({\n      url: \"api/goods/list\"\n    });\n    let leftArr = [];\n    let rightArr = [];\n    res.forEach(v => {\n      leftArr.push({\n        id: v.id,\n        name: v.name\n      });\n      rightArr.push(v.data);\n    });\n    this.leftData = leftArr;\n    this.rightData = rightArr;\n    this.$nextTick(() => {\n      new BetterScroll(this.$refs.left, {\n        click: true,\n        bounce: false\n      });\n      this.rightBScroll = new BetterScroll(this.$refs.right, {\n        click: true,\n        probeType: 3,\n        bounce: false\n      }); // 统计右侧所有板块高度值，并且放入数组中\n\n      let height = 0;\n      this.allHeight.push(height); //获取右侧每一块高度\n\n      let uls = this.$refs.right.getElementsByClassName(\"shop-list\"); //将DOM对象转换成真正的数据\n\n      Array.from(uls).forEach(v => {\n        height += v.clientHeight;\n        this.allHeight.push(height);\n      }); // 得到右侧滚动的值\n\n      this.rightBScroll.on(\"scroll\", pos => {\n        this.scrollY = Math.abs(pos.y);\n\n        if (Math.abs(pos.y) >= 150) {\n          this.isShow = false;\n        } else {\n          this.isShow = true;\n        }\n      });\n    });\n  },\n\n  methods: {\n    goScroll(index) {\n      // 第一个参数表示x轴方向，第二个参数表示y轴方向,300表示运动曲线时间\n      this.rightBScroll.scrollTo(0, -this.allHeight[index], 300);\n    }\n\n  },\n  computed: {\n    currentIndex() {\n      return this.allHeight.findIndex((item, index) => {\n        return this.scrollY >= item && this.scrollY < this.allHeight[index + 1];\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgDA;AACA;AACA;AACA;AACA;EACAA,YADA;;EAEAC;IACA;MACAC,YADA;MACA;MACAC,aAFA;MAEA;MACAC,gBAHA;MAGA;MACAC,aAJA;MAIA;MACAC,WALA;MAKA;MACAC;IANA;EAQA,CAXA;;EAYAC;IACAC,MADA;IAEAC;EAFA,CAZA;;EAgBA;IACA;MACAC;IADA;IAGA;IACA;IAEAC;MACAC;QACAC,QADA;QAEAd;MAFA;MAIAe;IACA,CANA;IAOA;IACA;IAEA;MACA;QACAC,WADA;QAEAC;MAFA;MAIA;QACAD,WADA;QAEAE,YAFA;QAGAD;MAHA,GALA,CAUA;;MACA;MACA,4BAZA,CAaA;;MACA,+DAdA,CAeA;;MACAE;QACAC;QACA;MACA,CAHA,EAhBA,CAoBA;;MACA;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACA;QACA;MACA,CAPA;IAQA,CA7BA;EA8BA,CA/DA;;EAgEAC;IACAC;MACA;MACA;IACA;;EAJA,CAhEA;EAsEAC;IACAC;MACA;QACA;MACA,CAFA;IAGA;;EALA;AAtEA","names":["name","data","leftData","rightData","rightBScroll","allHeight","scrollY","isShow","components","Tabbar","Header","url","res","leftArr","id","rightArr","click","bounce","probeType","Array","height","methods","goScroll","computed","currentIndex"],"sourceRoot":"src/views","sources":["List.vue"],"sourcesContent":["<template>\n  <div class=\"list\">\n    <header v-show=\"isShow\">\n      <div class=\"returns\">\n        <i class=\"iconfont icon-fanhui\"></i>\n      </div>\n      <div class=\"search\">\n        <i class=\"iconfont icon-sousuo\"></i>\n        <span>猜你喜欢</span>\n      </div>\n      <div class=\"home\">\n        <i class=\"iconfont icon-sousuo\"></i>\n      </div>\n    </header>\n    <section>\n      <div class=\"list_l\" ref=\"left\">\n        <ul class=\"l_item\">\n          <li\n            :class='{ active:index == currentIndex }'\n            v-for=\"(item, index) in leftData\"\n            :key=\"index\"\n            @click=\"goScroll(index)\"\n          >\n            {{ item.name }}\n          </li>\n        </ul>\n      </div>\n      <div class=\"list_r\" ref=\"right\">\n        <div>\n          <ul v-for=\"(item, index) in rightData\" :key=\"index\">\n            <li class=\"shop-list\" v-for=\"(k, i) in item\" :key=\"i\">\n              <h2>{{ k.name }}</h2>\n              <ul class=\"r-content\">\n                <li v-for=\"(j, ii) in k.list\" :key=\"ii\">\n                  <img :src=\"j.imgUrl\" alt=\"\" />\n                  <span>{{ j.name }}</span>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </section>\n    <Tabbar></Tabbar>\n  </div>\n</template>\n\n<script>\nimport Header from \"@/components/home/Header.vue\";\nimport Tabbar from \"../components/common/Tabbar.vue\";\nimport http from \"@/common/api/request.js\";\nimport BetterScroll from \"better-scroll\";\nexport default {\n  name: \"List\",\n  data() {\n    return {\n      leftData: [], //左侧数据\n      rightData: [], //右侧数据\n      rightBScroll: \"\", //右侧滑动\n      allHeight: [], //承载右侧高度值\n      scrollY: \"\", //右侧滚动距离\n      isShow:true,\n    };\n  },\n  components: {\n    Tabbar,\n    Header,\n  },\n  async created() {\n    let res = await http.$axios({\n      url: \"api/goods/list\",\n    });\n    let leftArr = [];\n    let rightArr = [];\n\n    res.forEach((v) => {\n      leftArr.push({\n        id: v.id,\n        name: v.name,\n      });\n      rightArr.push(v.data);\n    });\n    this.leftData = leftArr;\n    this.rightData = rightArr;\n\n    this.$nextTick(() => {\n      new BetterScroll(this.$refs.left, {\n        click: true,\n        bounce:false\n      });\n      this.rightBScroll = new BetterScroll(this.$refs.right,{\n        click: true,\n        probeType:3,\n        bounce:false\n      });\n      // 统计右侧所有板块高度值，并且放入数组中\n      let height = 0;\n      this.allHeight.push(height);\n      //获取右侧每一块高度\n      let uls = this.$refs.right.getElementsByClassName(\"shop-list\");\n      //将DOM对象转换成真正的数据\n      Array.from(uls).forEach((v) => {\n        height += v.clientHeight;\n        this.allHeight.push(height);\n      });\n      // 得到右侧滚动的值\n      this.rightBScroll.on(\"scroll\", (pos) => {\n        this.scrollY = Math.abs(pos.y);\n        if(Math.abs(pos.y)>=150){\n          this.isShow = false\n        }else{\n          this.isShow = true\n        }\n      });\n    });\n  },\n  methods: {\n    goScroll(index) {\n      // 第一个参数表示x轴方向，第二个参数表示y轴方向,300表示运动曲线时间\n      this.rightBScroll.scrollTo(0, -this.allHeight[index], 300);\n    },\n  },\n  computed: {\n    currentIndex() {\n      return this.allHeight.findIndex((item, index) => {\n        return this.scrollY >= item && this.scrollY < this.allHeight[index + 1];\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.list {\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  section {\n    display: flex;\n    flex: 1;\n    overflow: hidden;\n  }\n}\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 35px;\n  background-color: #b0352f;\n  .returns {\n    i {\n      color: #fff;\n      line-height: 35px;\n      padding: 0 20px;\n      font-size: 22px;\n    }\n  }\n  .search {\n    flex: 1;\n    padding: 4px 10px;\n    background-color: #fff;\n    border-radius: 20px;\n    i {\n      padding: 0 5px;\n      font-size: 14px;\n    }\n    span {\n      font-size: 14px;\n      color: #666;\n    }\n  }\n  .home {\n    line-height: 35px;\n    i {\n      padding: 0 17px;\n      font-size: 20px;\n    }\n  }\n}\nsection {\n  display: flex;\n  // flex: 1;\n  overflow: hidden;\n}\n.list_l {\n  width: 100px;\n  overflow: hidden;\n  background-color: #fff;\n  border-right: 1px solid #ccc;\n  .l_item {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    li {\n      // padding: 15px 0;\n      width: 100%;\n      font-size: 14px;\n      line-height: 25px;\n      margin: 8px 0;\n      text-align: center;\n    }\n  }\n}\n.active {\n  border-left: 5px solid #b0352f;\n  color: #b0352f;\n}\n.list_r {\n  flex: 1;\n  overflow: hidden;\n  .shop-list {\n    text-align: center;\n    h2 {\n      padding: 20px 0;\n      font-size: 20px;\n    }\n    .r-content {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n      margin-top: 15px;\n      li {\n        display: flex;\n        flex-direction: column;\n        justify-items: center;\n        align-items: center;\n        width: 33.3%;\n        padding: 10px 0;\n\n        img {\n          width: 50px;\n          height: 50px;\n        }\n        span {\n          font-size: 15px;\n        }\n      }\n    }\n  }\n}\n::v-deep.tabbar {\n  border-top: 1px solid #ccc;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module"}