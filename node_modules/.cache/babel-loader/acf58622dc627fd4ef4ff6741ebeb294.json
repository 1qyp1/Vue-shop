{"ast":null,"code":"import http from \"@/common/api/request.js\";\nimport { mapState, mapGetters, mapMutations, mapActions } from \"vuex\";\nimport { Toast } from \"mint-ui\";\nexport default {\n  name: \"Cart\",\n\n  data() {\n    return {\n      checked: true,\n      value: 1,\n      isNavStatus: false\n    };\n  },\n\n  components: {},\n\n  created() {\n    this.getData();\n  },\n\n  computed: { ...mapState({\n      list: state => state.cart.list,\n      selectList: state => state.cart.selectList\n    }),\n    ...mapGetters([\"isCheckedAll\", \"total\"]),\n\n    goodsList() {\n      return this.selectList.map(id => {\n        return this.list.find(v => v.id == id);\n      });\n    }\n\n  },\n  methods: { ...mapMutations([\"cartList\", \"checkItem\", 'initOrder']),\n    ...mapActions([\"checkAllFn\", \"delGoodsFn\"]),\n\n    goback() {\n      this.$router.back();\n    },\n\n    async getData() {\n      let res = await http.$axios({\n        url: \"/api/selectCart\",\n        method: \"post\",\n        headers: {\n          token: true\n        }\n      });\n      res.data.forEach(v => {\n        v[\"checked\"] = true;\n      });\n      this.cartList(res.data);\n    },\n\n    isNavBar() {\n      this.isNavStatus = !this.isNavStatus;\n    },\n\n    //修改数量\n    changeNum(value, item) {\n      //当前 购物车商品的 id以及  修改后的数量==》传递给后端\n      //value 就是修改后的数量\n      //item.id 就是购物车商品的id\n      http.$axios({\n        url: \"/api/updateNum\",\n        method: \"post\",\n        headers: {\n          token: true\n        },\n        data: {\n          id: item.id,\n          num: value\n        }\n      });\n    },\n\n    //去结算\n    goOrder() {\n      if (!this.selectList.length) {\n        Toast(\"请至少选择一件商品\");\n        return;\n      }\n\n      let newList = [];\n      this.list.forEach(item => {\n        // 遍历选中的id号\n        this.selectList.filter(v => {\n          if (v == item.id) {\n            newList.push(item);\n          }\n        });\n      }); //生成一个订单\n\n      http.$axios({\n        url: \"/api/addOrder\",\n        method: \"post\",\n        headers: {\n          token: true\n        },\n        data: {\n          arr: newList\n        }\n      }).then(res => {\n        if (!res.success) return; //存储订单号\n\n        this.initOrder(res.data);\n        console.log(res); //进入提交订单页面\n\n        this.$router.push({\n          path: \"/order\",\n          query: {\n            detail: JSON.stringify(this.selectList),\n            goodsList: JSON.stringify(this.goodsList)\n          }\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAgEA;AACA;AACA;AACA;EACAA,YADA;;EAEAC;IACA;MACAC,aADA;MAEAC,QAFA;MAGAC;IAHA;EAKA,CARA;;EASAC,cATA;;EAUAC;IACA;EACA,CAZA;;EAaAC,YACA;MACAC,8BADA;MAEAC;IAFA,EADA;IAKA,wCALA;;IAMAC;MACA;QACA;MACA,CAFA;IAGA;;EAVA,CAbA;EAyBAC,WACA,uDADA;IAEA,2CAFA;;IAGAC;MACA;IACA,CALA;;IAMA;MACA;QACAC,sBADA;QAEAC,cAFA;QAGAC;UACAC;QADA;MAHA;MAOAC;QACAC;MACA,CAFA;MAGA;IACA,CAlBA;;IAmBAC;MACA;IACA,CArBA;;IAsBA;IACAC;MACA;MACA;MACA;MACAC;QACAR,qBADA;QAEAC,cAFA;QAGAC;UACAC;QADA,CAHA;QAMAf;UACAqB,WADA;UAEAC;QAFA;MANA;IAWA,CAtCA;;IAuCA;IACAC;MACA;QACAC;QACA;MACA;;MACA;MACA;QACA;QACA;UACA;YACAC;UACA;QACA,CAJA;MAKA,CAPA,EANA,CAcA;;MACAL,KACAM,MADA,CACA;QACAd,oBADA;QAEAC,cAFA;QAGAC;UACAC;QADA,CAHA;QAMAf;UACA2B;QADA;MANA,CADA,EAWAC,IAXA,CAWAZ;QACA,yBADA,CAEA;;QACA;QACAa,iBAJA,CAKA;;QACA;UACAC,cADA;UAEAC;YACAC,uCADA;YAEAvB;UAFA;QAFA;MAOA,CAxBA;IAyBA;;EAhFA;AAzBA","names":["name","data","checked","value","isNavStatus","components","created","computed","list","selectList","goodsList","methods","goback","url","method","headers","token","res","v","isNavBar","changeNum","http","id","num","goOrder","Toast","newList","$axios","arr","then","console","path","query","detail"],"sourceRoot":"src/views","sources":["Cart.vue"],"sourcesContent":["<template>\n  <div class=\"cart\">\n    <header>\n      <div class=\"returns\">\n        <i class=\"iconfont icon-fanhui\" @click=\"$router.back()\"></i>\n      </div>\n      <span>购物车</span>\n      <span @click=\"isNavBar\" v-text=\"isNavStatus ? '完成' : '编辑'\"></span>\n    </header>\n    <section v-if=\"list.length\">\n      <div class=\"cart-title\">\n        <!-- vuex是单向数据,而v-model是双向的，所以要使用value -->\n        <van-checkbox :value=\"isCheckedAll\" @click=\"checkAllFn\"></van-checkbox>\n        <span>商品</span>\n      </div>\n      <ul>\n        <li v-for=\"(item, index) in list\" :key=\"index\">\n          <div class=\"check\" @click=\"checkItem(index)\">\n            <van-checkbox v-model=\"item.checked\"></van-checkbox>\n          </div>\n          <h2>\n            <img :src=\"item.goods_imgUrl\" alt=\"\" />\n          </h2>\n          <div class=\"goods\">\n            <div class=\"goods-title\">\n              <span>{{ item.goods_name }} </span>\n              <i class=\"iconfont icon-kefu\" @click=\"delGoodsFn(item.id)\"></i>\n            </div>\n            <div class=\"goods-price\">￥{{ item.goods_price }}</div>\n            <van-stepper\n              @change=\"changeNum($event, item)\"\n              v-model=\"item.goods_num\"\n              integer\n            />\n          </div>\n        </li>\n      </ul>\n    </section>\n    <section v-else>\n      暂无数据,请去首页添加商品至购物车\n      <router-link to=\"/home\">去首页</router-link>\n    </section>\n    <footer v-if=\"list.length\">\n      <div class=\"radio\">\n        <van-checkbox :value=\"isCheckedAll\" @click=\"checkAllFn\"></van-checkbox>\n      </div>\n      <div class=\"total\" v-if=\"!isNavStatus\">\n        <div>\n          共有\n          <span class=\"total-active\">{{ total.num }}</span>\n          件商品\n        </div>\n        <div>\n          <span>总计：</span>\n          <span class=\"total-active\">¥{{ total.price.toFixed(2) }}+ 0茶币</span>\n        </div>\n      </div>\n      <div class=\"order\" v-if=\"isNavStatus\" @click=\"delGoodsFn\">删除</div>\n      <div class=\"order\" v-else @click=\"goOrder\">去结算</div>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport http from \"@/common/api/request.js\";\nimport { mapState, mapGetters, mapMutations, mapActions } from \"vuex\";\nimport { Toast } from \"mint-ui\";\nexport default {\n  name: \"Cart\",\n  data() {\n    return {\n      checked: true,\n      value: 1,\n      isNavStatus: false,\n    };\n  },\n  components: {},\n  created() {\n    this.getData();\n  },\n  computed: {\n    ...mapState({\n      list: (state) => state.cart.list,\n      selectList: (state) => state.cart.selectList,\n    }),\n    ...mapGetters([\"isCheckedAll\", \"total\"]),\n         goodsList(){\n          return this.selectList.map(id=>{\n              return this.list.find(v=>v.id == id);\n          })\n      }\n  },\n  methods: {\n    ...mapMutations([\"cartList\", \"checkItem\",'initOrder']),\n    ...mapActions([\"checkAllFn\", \"delGoodsFn\"]),\n    goback() {\n      this.$router.back();\n    },\n    async getData() {\n      let res = await http.$axios({\n        url: \"/api/selectCart\",\n        method: \"post\",\n        headers: {\n          token: true,\n        },\n      });\n      res.data.forEach((v) => {\n        v[\"checked\"] = true;\n      });\n      this.cartList(res.data);\n    },\n    isNavBar() {\n      this.isNavStatus = !this.isNavStatus;\n    },\n    //修改数量\n    changeNum(value, item) {\n      //当前 购物车商品的 id以及  修改后的数量==》传递给后端\n      //value 就是修改后的数量\n      //item.id 就是购物车商品的id\n      http.$axios({\n        url: \"/api/updateNum\",\n        method: \"post\",\n        headers: {\n          token: true,\n        },\n        data: {\n          id: item.id,\n          num: value,\n        },\n      });\n    },\n    //去结算\n    goOrder() {\n      if (!this.selectList.length) {\n        Toast(\"请至少选择一件商品\");\n        return;\n      }\n      let newList = [];\n      this.list.forEach((item) => {\n        // 遍历选中的id号\n        this.selectList.filter((v) => {\n          if (v == item.id) {\n            newList.push(item);\n          }\n        });\n      });\n      //生成一个订单\n      http\n        .$axios({\n          url: \"/api/addOrder\",\n          method: \"post\",\n          headers: {\n            token: true,\n          },\n          data: {\n            arr: newList,\n          },\n        })\n        .then((res) => {\n          if (!res.success) return;\n          //存储订单号\n          this.initOrder(res.data);\n          console.log(res);\n          //进入提交订单页面\n          this.$router.push({\n            path: \"/order\",\n            query: {\n              detail: JSON.stringify(this.selectList),\n              goodsList:JSON.stringify( this.goodsList )\n            },\n          });\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 35px;\n  background-color: #b0352f;\n  span {\n    color: #fff;\n    padding: 0 20px;\n  }\n  .returns {\n    i {\n      color: #fff;\n      line-height: 35px;\n      padding: 0 20px;\n      font-size: 22px;\n    }\n  }\n  .home {\n    line-height: 35px;\n    i {\n      padding: 0 17px;\n      font-size: 20px;\n      color: #fff;\n    }\n  }\n}\nsection {\n  background-color: #f5f5f5;\n  .cart-title {\n    display: flex;\n    padding: 0.533333rem;\n    span {\n      padding: 0 0.4rem;\n      font-weight: 500;\n      font-size: 0.48rem;\n    }\n  }\n  ul {\n    display: flex;\n    flex-direction: column;\n    li {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 10px 0;\n      margin: 10px 0;\n      background-color: #fff;\n      .check {\n        padding-left: 10px;\n        padding-right: 10px;\n      }\n      .goods {\n        display: flex;\n        flex-direction: column;\n        margin: 0 15px;\n        font-size: 14px;\n        .goods-title {\n          display: flex;\n          i {\n            font-size: 18px;\n          }\n        }\n        .goods-price {\n          padding: 0.08rem 0;\n          color: #b0352f;\n        }\n        ::v-deep .van-stepper {\n          text-align: right;\n        }\n      }\n      img {\n        width: 100px;\n        height: 80px;\n      }\n    }\n  }\n}\nfooter {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 40px;\n  border-top: 0.053333rem solid #ccc;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  .radio {\n    padding: 0 0.4rem;\n  }\n  .total {\n    flex: 1;\n    font-size: 15px;\n    .total-active {\n      color: #b0352f;\n    }\n  }\n  .order {\n    width: 3.2rem;\n    line-height: 40px;\n    color: #fff;\n    text-align: center;\n    font-size: 15px;\n    background-color: #b0352f;\n    width: 80px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}