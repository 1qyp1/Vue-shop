{"ast":null,"code":"import { CART_LIST, CHECK_ALL, UN_CHECK_ALL, CHECK_ITEM } from './mutations-type.js';\nimport { Toast, Dialog } from 'vant';\nimport http from '@/common/api/request.js';\nexport default {\n  state: {\n    list: [],\n    //购物车的数据\n    selectList: [] //选中的数据\n\n  },\n  getters: {\n    // 即当这两个数组相等就为全选，否则就是全不选\n    isCheckedAll(state) {\n      return state.list.length == state.selectList.length;\n    },\n\n    total(state) {\n      let total = {\n        num: 0,\n        price: 0\n      };\n      state.list.forEach(v => {\n        if (v.checked) {\n          total.num += parseInt(v.goods_num);\n          total.price += v.goods_price * v.goods_num;\n        }\n      });\n      return total;\n    }\n\n  },\n  mutations: {\n    [CART_LIST](state, cartArr) {\n      state.list = cartArr;\n      state.selectList = state.list.map(v => {\n        return v.id;\n      });\n    },\n\n    // 全选\n    [CHECK_ALL](state) {\n      state.selectList = state.list.map(v => {\n        v.checked = true; // 并将全选后的id赋值给selectList\n\n        return v.id;\n      });\n    },\n\n    // 全不选\n    [UN_CHECK_ALL](state) {\n      state.list.forEach(v => {\n        v.checked = false;\n      }); // 并使这个数组全为空\n\n      state.selectList = [];\n    },\n\n    //单选\n    [CHECK_ITEM](state, index) {\n      let id = state.list[index].id;\n      let i = state.selectList.indexOf(id); //能在selectList找到对应的id，就删除\n\n      if (i > -1) {\n        return state.selectList.splice(i, 1);\n      } //如果之前没有选中，就给selectList添加一个id进去\n\n\n      state.selectList.push(id);\n    },\n\n    //删除(更新list上的删除)\n    delGoods(state) {\n      state.list = state.list.filter(v => {\n        return state.selectList.indexOf(v.id) == -1;\n      });\n    }\n\n  },\n  actions: {\n    // 提交\n    checkAllFn({\n      commit,\n      getters\n    }) {\n      // 意思是当isisCheckedAll为true时就已经是全选了，那么就让变为全不选，这样就实现了点击切换的功能\n      getters.isCheckedAll ? commit('unCheckAll') : commit('checkAll');\n    },\n\n    //删除操作\n    delGoodsFn({\n      commit,\n      state\n    }, id) {\n      //如果没有选中，则提示信息\n      if (state.selectList.length == 0) {\n        Toast('请选择商品');\n      }\n\n      let arrCart = [];\n      Dialog.confirm({\n        message: '确定要删除这些商品吗？'\n      }).then(() => {\n        // 确定删除\n        // 如果是number就单个删除\n        if (typeof id == 'number') {\n          //当个删除\n          arrCart = [id];\n          let index = state.list.findIndex(v => {\n            return v.id == id;\n          });\n          state.list.splice(index, 1);\n        } else {\n          //多选删除\n          arrCart = state.selectList;\n          commit('delGoods');\n        }\n\n        http.$axios({\n          url: '/api/deleteCart',\n          method: 'post',\n          data: {\n            arrId: arrCart\n          }\n        }).then(res => {\n          if (res.success) {\n            Toast('删除成功');\n          }\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["CART_LIST","CHECK_ALL","UN_CHECK_ALL","CHECK_ITEM","Toast","Dialog","http","state","list","selectList","getters","isCheckedAll","length","total","num","price","forEach","v","checked","parseInt","goods_num","goods_price","mutations","cartArr","map","id","index","i","indexOf","splice","push","delGoods","filter","actions","checkAllFn","commit","delGoodsFn","arrCart","confirm","message","then","findIndex","$axios","url","method","data","arrId","res","success"],"sources":["E:/BaiduNetdiskDownload/vue-tea/vue-tea/src/store/modules/cart.js"],"sourcesContent":["import {\r\n    CART_LIST,\r\n    CHECK_ALL,\r\n    UN_CHECK_ALL,\r\n    CHECK_ITEM\r\n} from './mutations-type.js'\r\nimport {\r\n    Toast,\r\n    Dialog\r\n} from 'vant';\r\nimport http from '@/common/api/request.js'\r\nexport default {\r\n    state: {\r\n        list: [], //购物车的数据\r\n        selectList: [] //选中的数据\r\n    },\r\n    getters: {\r\n        // 即当这两个数组相等就为全选，否则就是全不选\r\n        isCheckedAll(state) {\r\n            return state.list.length == state.selectList.length;\r\n        },\r\n        total(state) {\r\n            let total = {\r\n                num: 0,\r\n                price: 0\r\n            }\r\n            state.list.forEach(v => {\r\n                if (v.checked) {\r\n                    total.num += parseInt(v.goods_num)\r\n                    total.price += v.goods_price * v.goods_num\r\n                }\r\n            })\r\n            return total;\r\n        }\r\n    },\r\n    mutations: {\r\n        [CART_LIST](state, cartArr) {\r\n            state.list = cartArr;\r\n            state.selectList=state.list.map(v=>{\r\n                return v.id\r\n            })\r\n        },\r\n        // 全选\r\n        [CHECK_ALL](state) {\r\n            state.selectList = state.list.map(v => {\r\n                v.checked = true;\r\n                // 并将全选后的id赋值给selectList\r\n                return v.id;\r\n            })\r\n        },\r\n        // 全不选\r\n        [UN_CHECK_ALL](state) {\r\n            state.list.forEach(v => {\r\n                v.checked = false;\r\n            })\r\n            // 并使这个数组全为空\r\n            state.selectList = [];\r\n        },\r\n        //单选\r\n        [CHECK_ITEM](state, index) {\r\n            let id = state.list[index].id;\r\n            let i = state.selectList.indexOf(id);\r\n            //能在selectList找到对应的id，就删除\r\n            if (i > -1) {\r\n                return state.selectList.splice(i, 1);\r\n            }\r\n            //如果之前没有选中，就给selectList添加一个id进去\r\n            state.selectList.push(id);\r\n        },\r\n        //删除(更新list上的删除)\r\n        delGoods(state) {\r\n            state.list = state.list.filter(v => {\r\n                return state.selectList.indexOf(v.id) == -1\r\n            })\r\n        }\r\n    },\r\n    actions: {\r\n        // 提交\r\n        checkAllFn({\r\n            commit,\r\n            getters\r\n        }) {\r\n            // 意思是当isisCheckedAll为true时就已经是全选了，那么就让变为全不选，这样就实现了点击切换的功能\r\n            getters.isCheckedAll ? commit('unCheckAll') : commit('checkAll');\r\n        },\r\n        //删除操作\r\n        delGoodsFn({\r\n            commit,\r\n            state\r\n        }, id) {\r\n            //如果没有选中，则提示信息\r\n            if (state.selectList.length == 0) {\r\n                Toast('请选择商品');\r\n            }\r\n            let arrCart = [];\r\n            Dialog.confirm({\r\n                message: '确定要删除这些商品吗？',\r\n            }).then(() => {\r\n                // 确定删除\r\n                // 如果是number就单个删除\r\n                if (typeof id == 'number') {\r\n                    //当个删除\r\n                    arrCart = [id];\r\n                    let index = state.list.findIndex(v => {\r\n                        return v.id == id\r\n                    })\r\n                    state.list.splice(index, 1);\r\n                } else {\r\n                    //多选删除\r\n                    arrCart = state.selectList;\r\n                    commit('delGoods');\r\n                }\r\n\r\n                http.$axios({\r\n                    url: '/api/deleteCart',\r\n                    method: 'post',\r\n                    data: {\r\n                        arrId:arrCart\r\n                    }\r\n                }).then(res => {\r\n                    if(res.success){\r\n                        Toast('删除成功')\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SACIA,SADJ,EAEIC,SAFJ,EAGIC,YAHJ,EAIIC,UAJJ,QAKO,qBALP;AAMA,SACIC,KADJ,EAEIC,MAFJ,QAGO,MAHP;AAIA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,eAAe;EACXC,KAAK,EAAE;IACHC,IAAI,EAAE,EADH;IACO;IACVC,UAAU,EAAE,EAFT,CAEY;;EAFZ,CADI;EAKXC,OAAO,EAAE;IACL;IACAC,YAAY,CAACJ,KAAD,EAAQ;MAChB,OAAOA,KAAK,CAACC,IAAN,CAAWI,MAAX,IAAqBL,KAAK,CAACE,UAAN,CAAiBG,MAA7C;IACH,CAJI;;IAKLC,KAAK,CAACN,KAAD,EAAQ;MACT,IAAIM,KAAK,GAAG;QACRC,GAAG,EAAE,CADG;QAERC,KAAK,EAAE;MAFC,CAAZ;MAIAR,KAAK,CAACC,IAAN,CAAWQ,OAAX,CAAmBC,CAAC,IAAI;QACpB,IAAIA,CAAC,CAACC,OAAN,EAAe;UACXL,KAAK,CAACC,GAAN,IAAaK,QAAQ,CAACF,CAAC,CAACG,SAAH,CAArB;UACAP,KAAK,CAACE,KAAN,IAAeE,CAAC,CAACI,WAAF,GAAgBJ,CAAC,CAACG,SAAjC;QACH;MACJ,CALD;MAMA,OAAOP,KAAP;IACH;;EAjBI,CALE;EAwBXS,SAAS,EAAE;IACP,CAACtB,SAAD,EAAYO,KAAZ,EAAmBgB,OAAnB,EAA4B;MACxBhB,KAAK,CAACC,IAAN,GAAae,OAAb;MACAhB,KAAK,CAACE,UAAN,GAAiBF,KAAK,CAACC,IAAN,CAAWgB,GAAX,CAAeP,CAAC,IAAE;QAC/B,OAAOA,CAAC,CAACQ,EAAT;MACH,CAFgB,CAAjB;IAGH,CANM;;IAOP;IACA,CAACxB,SAAD,EAAYM,KAAZ,EAAmB;MACfA,KAAK,CAACE,UAAN,GAAmBF,KAAK,CAACC,IAAN,CAAWgB,GAAX,CAAeP,CAAC,IAAI;QACnCA,CAAC,CAACC,OAAF,GAAY,IAAZ,CADmC,CAEnC;;QACA,OAAOD,CAAC,CAACQ,EAAT;MACH,CAJkB,CAAnB;IAKH,CAdM;;IAeP;IACA,CAACvB,YAAD,EAAeK,KAAf,EAAsB;MAClBA,KAAK,CAACC,IAAN,CAAWQ,OAAX,CAAmBC,CAAC,IAAI;QACpBA,CAAC,CAACC,OAAF,GAAY,KAAZ;MACH,CAFD,EADkB,CAIlB;;MACAX,KAAK,CAACE,UAAN,GAAmB,EAAnB;IACH,CAtBM;;IAuBP;IACA,CAACN,UAAD,EAAaI,KAAb,EAAoBmB,KAApB,EAA2B;MACvB,IAAID,EAAE,GAAGlB,KAAK,CAACC,IAAN,CAAWkB,KAAX,EAAkBD,EAA3B;MACA,IAAIE,CAAC,GAAGpB,KAAK,CAACE,UAAN,CAAiBmB,OAAjB,CAAyBH,EAAzB,CAAR,CAFuB,CAGvB;;MACA,IAAIE,CAAC,GAAG,CAAC,CAAT,EAAY;QACR,OAAOpB,KAAK,CAACE,UAAN,CAAiBoB,MAAjB,CAAwBF,CAAxB,EAA2B,CAA3B,CAAP;MACH,CANsB,CAOvB;;;MACApB,KAAK,CAACE,UAAN,CAAiBqB,IAAjB,CAAsBL,EAAtB;IACH,CAjCM;;IAkCP;IACAM,QAAQ,CAACxB,KAAD,EAAQ;MACZA,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACC,IAAN,CAAWwB,MAAX,CAAkBf,CAAC,IAAI;QAChC,OAAOV,KAAK,CAACE,UAAN,CAAiBmB,OAAjB,CAAyBX,CAAC,CAACQ,EAA3B,KAAkC,CAAC,CAA1C;MACH,CAFY,CAAb;IAGH;;EAvCM,CAxBA;EAiEXQ,OAAO,EAAE;IACL;IACAC,UAAU,CAAC;MACPC,MADO;MAEPzB;IAFO,CAAD,EAGP;MACC;MACAA,OAAO,CAACC,YAAR,GAAuBwB,MAAM,CAAC,YAAD,CAA7B,GAA8CA,MAAM,CAAC,UAAD,CAApD;IACH,CARI;;IASL;IACAC,UAAU,CAAC;MACPD,MADO;MAEP5B;IAFO,CAAD,EAGPkB,EAHO,EAGH;MACH;MACA,IAAIlB,KAAK,CAACE,UAAN,CAAiBG,MAAjB,IAA2B,CAA/B,EAAkC;QAC9BR,KAAK,CAAC,OAAD,CAAL;MACH;;MACD,IAAIiC,OAAO,GAAG,EAAd;MACAhC,MAAM,CAACiC,OAAP,CAAe;QACXC,OAAO,EAAE;MADE,CAAf,EAEGC,IAFH,CAEQ,MAAM;QACV;QACA;QACA,IAAI,OAAOf,EAAP,IAAa,QAAjB,EAA2B;UACvB;UACAY,OAAO,GAAG,CAACZ,EAAD,CAAV;UACA,IAAIC,KAAK,GAAGnB,KAAK,CAACC,IAAN,CAAWiC,SAAX,CAAqBxB,CAAC,IAAI;YAClC,OAAOA,CAAC,CAACQ,EAAF,IAAQA,EAAf;UACH,CAFW,CAAZ;UAGAlB,KAAK,CAACC,IAAN,CAAWqB,MAAX,CAAkBH,KAAlB,EAAyB,CAAzB;QACH,CAPD,MAOO;UACH;UACAW,OAAO,GAAG9B,KAAK,CAACE,UAAhB;UACA0B,MAAM,CAAC,UAAD,CAAN;QACH;;QAED7B,IAAI,CAACoC,MAAL,CAAY;UACRC,GAAG,EAAE,iBADG;UAERC,MAAM,EAAE,MAFA;UAGRC,IAAI,EAAE;YACFC,KAAK,EAACT;UADJ;QAHE,CAAZ,EAMGG,IANH,CAMQO,GAAG,IAAI;UACX,IAAGA,GAAG,CAACC,OAAP,EAAe;YACX5C,KAAK,CAAC,MAAD,CAAL;UACH;QACJ,CAVD;MAWH,CA7BD;IA8BH;;EAjDI;AAjEE,CAAf"},"metadata":{},"sourceType":"module"}